// backend/testRoutes.js
const fetch = require('node-fetch');
require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const API_URL = 'http://localhost:3001';
const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);

// Modifier ici selon le r√¥le √† tester :
const testUser = {
  email: "harzoyakko@gufum.com", // ou "prof1@zvvzuv.com"
  password: "111111"
};

(async () => {
  try {
    console.log("üîê Authentification en cours...");

    const { data, error } = await supabase.auth.signInWithPassword({
      email: testUser.email,
      password: testUser.password,
    });

    if (error) throw error;
    const token = data.session.access_token;
    console.log("‚úÖ Token r√©cup√©r√© :", token.slice(0, 30) + '...');

    const headers = {
      "Content-Type": "application/json",
      "Authorization": `Bearer ${token}`
    };

    // R√©cup√©ration du r√¥le pour affichage
    const role = data.user.user_metadata?.role;
    console.log("üë§ R√¥le d√©tect√© :", role || "inconnu");

    const routesToTest = [
      { method: "GET", path: "/eleves" },
      { method: "GET", path: "/profs" },
      { method: "GET", path: "/cours" },
      { method: "GET", path: "/notifications" },
      { method: "GET", path: "/disponibilites" },
      { method: "GET", path: "/reservations" },
      { method: "GET", path: "/planning" },
    ];

    for (const route of routesToTest) {
      console.log(`\n‚û°Ô∏è  ${route.method} ${route.path}`);
      const response = await fetch(`${API_URL}${route.path}`, {
        method: route.method,
        headers
      });

      const json = await response.json();
      if (response.ok) {
        console.log("‚úÖ Succ√®s:", json);
      } else {
        console.log("‚ùå Erreur:", json);
      }
    }

    // üîî Test POST /notifications
    console.log(`\n‚û°Ô∏è  POST /notifications`);
    const postNotifRes = await fetch(`${API_URL}/notifications`, {
      method: "POST",
      headers,
      body: JSON.stringify({
        titre: "Bienvenue !",
        message: `Notification test envoy√©e par ${testUser.email}`
      })
    });

    const notifJson = await postNotifRes.json();
    if (postNotifRes.ok) {
      console.log("‚úÖ Notification cr√©√©e:", notifJson);
    } else {
      console.log("‚ùå Erreur cr√©ation notif:", notifJson);
    }

  } catch (e) {
    console.error("‚ùå √âchec global :", e.message);
  }
})();
